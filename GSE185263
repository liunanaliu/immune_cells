https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE185263
https://pubmed.ncbi.nlm.nih.gov/35027333/
Predicting sepsis severity at first clinical presentation: The role of endotypes and mechanistic signatures

have 3 conditions including died, survived, and NA (also included healthy)

have two diseases, includinng sepsis and healthy

setwd("~/Desktop/GSE185263")
GSE185263_raw_counts <- read.csv("~/Desktop/GSE185263/GSE185263_raw_counts.csv", 
                                 row.names=1)
rownames(GSE185263_raw_counts)

gse <- getGEO(GEO = 'GSE185263', 
              GSEMatrix =TRUE)

metadata <- pData(phenoData(gse[[1]]))
head(metadata)

metadata.modified <- metadata %>%
  select(1,46,49:53) 

sum(is.na(metadata.modified))
#0
save(metadata.modified,file = 'metadata.modified.rda')
gse
#change ensembl id to symbol
library(clusterProfiler)
library(org.Hs.eg.db) #for Human
library(org.Mm.eg.db)#fr mouse
rownames(GSE185263_raw_counts)
gene.df <- bitr(row.names(GSE185263_raw_counts), 
                fromType = "ENSEMBL", # 从SYMBOL到ENSEMBL和ENTREZID,得到新命名的gene.df
                toType = c("SYMBOL","ENTREZID"),
                OrgDb = org.Hs.eg.db) #小鼠换成org.Mm.eg.db
head(gene.df)
feature.data <- gene.df[,c(1,2)]

keep <- sum(rowSums(GSE185263_raw_counts)>0)
GSE185263_raw_counts <- GSE185263_raw_counts[rowSums(GSE185263_raw_counts)>0,]
#from 58389 to 43406, 14983 were excluded
feature.data <- feature.data[feature.data$SYMBOL !="",]
GSE185263_raw_counts <- GSE185263_raw_counts[feature.data$ENSEMBL,]
#from 43406 to 28017
feature.data$median <- apply(GSE185263_raw_counts,1,median)
feature.data <- feature.data[order(feature.data$SYMBOL,
                                   feature.data$median,
                                   decreasing = T),]


feature.data <- feature.data[!duplicated(feature.data$SYMBOL),]
#from 28017 to 27941
GSE185263_raw_counts <- GSE185263_raw_counts[feature.data$ENSEMBL,]
#from 28017 to 27941
rownames(GSE185263_raw_counts) <- feature.data$SYMBOL
save(GSE185263_raw_counts,file = "GSE185263_raw_counts.rda")

GSE185263_raw_counts2 <- data.frame(t(GSE185263_raw_counts))
colnames(GSE185263_raw_counts2)

(rownames(GSE185263_raw_counts2)==(metadata.modified$title))
#t
rownames(GSE185263_raw_counts2) <- metadata$geo_accession
#optimal
GSE185263_raw_counts3 <- cbind(metadata.modified,
                               GSE185263_raw_counts2)
GSE185263_raw_counts3[1:4,1:8]
save(GSE185263_raw_counts3,
     file = "GSE185263_raw_counts3.rda")
GSE185263_raw_counts3$CXCL8
GSE185263_raw_counts3$CXCR2
GSE185263_raw_counts3$CXCR1
GSE185263_raw_counts3$GAPDH
GSE185263_raw_counts3[1:4,1:8]
GSE185263_cxc <- GSE185263_raw_counts3[,c("title","age:ch1","disease state:ch1",
                             "in hospital mortality:ch1","Sex:ch1",
                             "sofa 24h post admisssion:ch1",'tissue:ch1',
                             "GAPDH","CXCL8","CXCR1","CXCR2")]

save(GSE185263_cxc,file = "GSE185263_cxc.rda")
table(GSE185263_cxc$`disease state:ch1`)
table(GSE185263_cxc$`in hospital mortality:ch1`)
table(GSE185263_cxc$`Sex:ch1`)

library(edgeR)
GSE185263_cxc2 <- log2(edgeR::cpm(GSE185263_cxc[,-(1:7)])+1)
GSE185263_cxc2 <- cbind(GSE185263_cxc[,1:7],GSE185263_cxc2)

p <- ggboxplot(GSE185263_cxc2,
               'disease state:ch1', 
               'CXCL8',
               #color = 'in hospital mortality:ch1',
               #legend = "none",
               xlab = 'Condition',
               ylab = 'CXCL8 in whole blood',
               add = "point",
               palette = "npg")
p

##same for the other cxc genes

p <- ggboxplot(GSE185263_cxc2,
               'disease state:ch1', 
               'CXCR2',
               color = 'in hospital mortality:ch1',
               #legend = "none",
               xlab = 'Condition',
               ylab = 'CXCR2 in whole blood',
               add = "point",
               palette = "npg")
p

GSE185263_cxc2$Condition <- str_c(GSE185263_cxc2$`disease state:ch1`,
      GSE185263_cxc2$`in hospital mortality:ch1`,
      sep = '_')
table(GSE185263_cxc2$Condition)

method1 <- "anova" # one of "anova" or "kruskal.test"
method2 <- "t.test" # one of "wilcox.test" or "t.test"
my_comparisons <- list(c("healthy_NA", "sepsis_Died"), 
                       c("healthy_NA", "sepsis_NA"),
                       c("healthy_NA", "sepsis_Survived"),
                       c("sepsis_Died", "sepsis_NA"),
                       c("sepsis_Died", "sepsis_Survived"),
                       c("sepsis_NA", "sepsis_Survived")) 

x <- which(names(GSE185263_cxc2) == "Condition") # name of grouping variable
y <- which(names(GSE185263_cxc2) == "GAPDH" # names of variables to test
           | names(GSE185263_cxc2) == "CXCL8" |
             names(GSE185263_cxc2) == "CXCR1" |
             names(GSE185263_cxc2) == "CXCR2")

library(ggplot2)
library(ggpubr)
for (i in y) {
  for (j in x) {
    p <- ggboxplot(GSE185263_cxc2,
                   x = colnames(GSE185263_cxc2[j]), 
                   y = colnames(GSE185263_cxc2[i]),
                   color = colnames(GSE185263_cxc2[j]),
                   legend = "none",
                   palette = "npg",
                   add = "jitter"
    )
    print(
      p + stat_compare_means(aes(label = paste0(..method.., 
                                                ", p-value = ",
                                                ..p.format..)),
                             method = method1, 
                             label.y = max(GSE185263_cxc2[, i], 
                                           na.rm = TRUE)
      )
      + stat_compare_means(comparisons = my_comparisons, 
                           method = method2, 
                           label = "p.format") # remove if p-value of ANOVA or Kruskal-Wallis test >= alpha
    )
  }
}


GSE185263_cxc3 <- gather(GSE185263_cxc2[,-(1:7)],
                        'Gene','Expression' ,-"Condition")
View(GSE185263_cxc3)
table(GSE185263_cxc3$Gene)
GSE185263_cxc3$Gene <- factor(GSE185263_cxc3$Gene,
                             levels = c("GAPDH","CXCL8",
                                        "CXCR1","CXCR2"))
p <- ggboxplot(GSE185263_cxc3,
               "Condition", 
               'Expression',
               color = 'Gene',
               #legend = "none",
               palette = "npg",
               add = "point"
)
p





